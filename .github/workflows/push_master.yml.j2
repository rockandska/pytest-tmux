{% raw %}
name: On push master
on:
  push:
    branches:
      - 'master'
env:
  TERM: xterm-256color
  UBUNTU_IMAGE: ubuntu-22.04
concurrency:
  group: ${{ github.head_ref || github.ref_name }}
jobs:
{% endraw %}

{% include 'pyenv_install.j2.inc' %}

{% include 'tests.j2.inc' %}

{%- raw %}
  Release:
    # Don't run twice for internal PRs from our own repo
    if: |
      (github.event_name == 'push' ||
      github.event.pull_request.head.repo.full_name != github.repository) &&
      contains(github.event.head_commit.message, '[make release]')
    needs: Tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2

      - name: Restore pyenv cache
        id: pyenv-cache
        uses: actions/cache/restore@v4
        env:
          cache-name: pyenv-cache
        with:
          path: ${{ env.pyenv_root }}
          key: ${{ runner.os }}-pyenv-cache-${{ hashFiles('.python-version') }}
          restore-keys: ${{ runner.os }}-pyenv-cache-

      - name: Setup PYENV
        run: |
          echo "${{ env.pyenv_root }}/bin" >> "$GITHUB_PATH"
          echo "PYENV_ROOT=${{ env.pyenv_root }}" >> "$GITHUB_ENV"

      - name: Configure git
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Fetch tags
        run: |
          git fetch --prune --unshallow --tags
      - name: make release
        run: |
          eval "$(pyenv init -)"
          pyenv rehash
          make release
      - name: Push back CHANGELOG and tag
        run: |
          git push --follow-tags
      - name: Create GH release
        run: |
          make release-gh
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: make publish
        run: |
          eval "$(pyenv init -)"
          pyenv rehash
          make publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
  Changelog:
    # Don't run twice for internal PRs from our own repo
    if: |
        (github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository)
        && always() && ! contains(github.event.head_commit.message, '[make release]')
    needs: Tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Configure git
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Fetch tags
        run: |
          git fetch --prune --unshallow --tags
      - name: make CHANGELOG.md
        run: |
          make CHANGELOG.md
      - name: Push back CHANGELOG
        run: |
          git push
{% endraw %}
